@using Magicube.Web.Security
@using Microsoft.AspNetCore.Identity
@inject ISiteManager SiteService
@inject MagicubeSignInManager<User> SignInManager

@{
    var externalAuthenticationSchemes = await SignInManager.GetExternalAuthenticationSchemesAsync();
}
<ul class="navbar-nav">
    @if (User.Identity.IsAuthenticated)
    {
        <li class="nav-item dropdown">
            <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown"><i class="fa fa-user fa-fw" aria-hidden="true"></i> @User.Identity.Name<b class="caret"></b></a>
            <div class="dropdown-menu">
                @if (await AuthorizationService.AuthorizeAsync(User, new Permission("Magicube.Dashboard:Admin:Index"))) {
                    <a class="dropdown-item" asp-route-area="Magicube.Dashboard" asp-controller="Admin" asp-action="Index"><i class="fa fa-desktop fa-fw" aria-hidden="true"></i> @L["仪表盘"]</a>
                }
                <a class="dropdown-item" asp-route-area="Identity" asp-controller="Account" asp-action="ResetPassword" asp-route-returnUrl=""><i class="fa fa-lock fa-fw" aria-hidden="true"></i> @L["修改密码"]</a>
                @if (externalAuthenticationSchemes.Count() > 0)
                {
                    <a class="dropdown-item" asp-route-area="Magicube.Users" asp-controller="Account" asp-action="ExternalLogins"><i class="fa fa-user-lock fa-fw" aria-hidden="true"></i> @L["外部登录"]</a>
                }
                <form asp-route-area="Magicube.Users" asp-controller="Account" asp-action="Logout" method="post" class="no-multisubmit">
                    <button type="submit" class="btn btn-link navbar-btn dropdown-item"><i class="fa fa-sign-out-alt fa-fw" aria-hidden="true"></i> @L["登出"]</button>
                </form>
            </div>
        </li>
    }
    else
    {
        <li class="nav-item"><a class="nav-link" asp-route-area="Identity" asp-controller="Account" asp-action="Login"><i class="fa fa-sign-in-alt fa-fw" aria-hidden="true"></i> @L["登陆"]</a></li>
    }
</ul>